version: '3.3'

services:
  db:
    container_name: postgres
    image: postgres:12.4-alpine
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:6.0.8-alpine
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - 'redis:/data'
    ports:
      - '6379:6379'

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - 'db'
      - 'redis'
    ports:
      - '3000:3000'
    volumes:
      - '.:/backend_challenge'
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/backend_challenge/node_modules
    environment:
      - RAILS_ENV=development
    entrypoint: ./entrypoints/app_entrypoint.sh

  sidekiq:
    container_name: sidekiq
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - 'app'
      - 'db'
      - 'redis'
    volumes:
      - '.:/backend_challenge'
      - '/backend_challenge/tmp'
      - gem_cache:/usr/local/bundle/gems
      - node_modules:/backend_challenge/node_modules
    environment:
      - RAILS_ENV=development
      - REDIS_URL_SIDEKIQ=redis://redis:6379/12
    entrypoint: ./entrypoints/sidekiq_entrypoint.sh

volumes:
  redis:
  postgres:
  gem_cache:
  node_modules:

